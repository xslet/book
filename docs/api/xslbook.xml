<?xml version="1.0" encoding="UTF-8"?><?xml-stylesheet type="application/xml" href="xsldoc/xsldoc.xsl"?><!-- xslbook.xsl v0.1. Copyright (C) xslet@github. MIT License --><!--** xslbook.xsl ver0.1 - API Document

** Copyright (C) xslet@github
** MIT License
--><xsl:stylesheet xmlns:ut="https://github.com/xslet/2020/xslutil" xmlns:do="https://github.com/xslet/2020/xsldo" xmlns:bk="https://github.com/xslet/2020/xslbook" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0"><!--**
   The URL of table of contents from `/book@toc`.
 --><xsl:param name="bk:toc_url"><xsl:variable name="_url"><xsl:value-of select="/book/@toc"/></xsl:variable><xsl:choose><xsl:when test="contains($_url, '#')"><xsl:value-of select="substring-before($_url, '#')"/></xsl:when><xsl:otherwise><xsl:value-of select="$_url"/></xsl:otherwise></xsl:choose></xsl:param><!--**
   The index of the current page among pages contained in table of contents.
 --><xsl:param name="bk:page_index"><xsl:call-template name="bk:get_page_index"/></xsl:param><xsl:param name="bk:page_url"><xsl:for-each select="document($bk:toc_url,/)/book/toc[1]"><xsl:value-of select="(.//page)[position() = $bk:page_index]/@href"/></xsl:for-each></xsl:param><xsl:param name="bk:prev_page_url"><xsl:for-each select="document($bk:toc_url,/)/book/toc[1]"><xsl:value-of select="(.//page)[position() = $bk:page_index - 1]/@href"/></xsl:for-each></xsl:param><xsl:param name="bk:next_page_url"><xsl:for-each select="document($bk:toc_url,/)/book/toc[1]"><xsl:value-of select="(.//page)[position() = $bk:page_index + 1]/@href"/></xsl:for-each></xsl:param><xsl:param name="bk:label_navi_prev">previous</xsl:param><xsl:param name="bk:label_navi_next">next</xsl:param><xsl:param name="bk:label_navi_toc">table of contents</xsl:param><xsl:param name="bk:preface_index_format"/><xsl:param name="bk:chapter_index_format">1.</xsl:param><xsl:param name="bk:appendix_index_format">A.</xsl:param><xsl:param name="bk:postface_index_format"/><xsl:param name="bk:section_index_format">1.</xsl:param><!--** The URL of the XSL file. --><xsl:param name="bk:xsl_url"><xsl:call-template name="ut:get_xsl_url"/></xsl:param><!--** The directory URL of the XSL file. --><xsl:param name="bk:xsl_dir"><xsl:call-template name="ut:get_dir_from_url"><xsl:with-param name="url" select="$bk:xsl_url"/></xsl:call-template></xsl:param><!--**
  Prints a HTML element.
 --><xsl:template match="p|br|hr|b|i|u|s|code|sup|sub|q"><!--** An URL of external data file. --><xsl:param name="data_url"/><!--** A generated-id of a base node. --><xsl:param name="data_gid"/><!--** A flag if text node is allowed. --><xsl:param name="allow_text_node" select="$ut:true"/><!--** Elements which are denied to be applied. --><xsl:param name="deny">|attr|</xsl:param><!--** Any argument 0. --><xsl:param name="arg0"/><!--** Any argument 1. --><xsl:param name="arg1"/><!--** Any argument 2. --><xsl:param name="arg2"/><xsl:variable name="_data_url"><xsl:call-template name="bk:get_data_url"><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></xsl:variable><xsl:variable name="_data_gid"><xsl:call-template name="bk:get_data_gid"><xsl:with-param name="data_gid" select="$data_gid"/></xsl:call-template></xsl:variable><xsl:element name="{name()}"><xsl:for-each select="attribute::*"><xsl:attribute name="{name()}"><xsl:value-of select="."/></xsl:attribute></xsl:for-each><xsl:for-each select="attr"><xsl:attribute name="{@name}"><xsl:apply-templates><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/></xsl:apply-templates></xsl:attribute></xsl:for-each><xsl:apply-templates select="node()[name()!='attr']"><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/></xsl:apply-templates></xsl:element></xsl:template><!--**
  Get the index of the current page in pages among pages conteined in table of contents.
 --><xsl:template name="bk:get_page_index"><xsl:if test="string-length($bk:toc_url) &gt; 0"><xsl:variable name="_index"><xsl:if test="system-property('xsl:vendor') = 'Transformiix'"><xsl:call-template name="bk:_get_page_index_by_gid"/></xsl:if></xsl:variable><xsl:choose><xsl:when test="string-length($_index) &gt; 0"><xsl:value-of select="$_index"/></xsl:when><xsl:otherwise><xsl:call-template name="bk:_get_page_index_by_titles"/></xsl:otherwise></xsl:choose></xsl:if></xsl:template><xsl:template name="bk:_get_page_index_by_gid"><xsl:variable name="_current_gid" select="generate-id(/)"/><xsl:for-each select="document($bk:toc_url, /)/book/toc[1]"><xsl:for-each select=".//page"><xsl:if test="generate-id(document(@href, /)) = $_current_gid"><xsl:value-of select="position()"/></xsl:if></xsl:for-each></xsl:for-each></xsl:template><xsl:template name="bk:_get_page_index_by_titles"><xsl:variable name="_current_titles"><xsl:apply-templates select="//title"/></xsl:variable><xsl:for-each select="document($bk:toc_url, /)/book/toc[1]"><xsl:for-each select=".//page"><xsl:variable name="_titles"><xsl:apply-templates select="document(@href, /)//title"/></xsl:variable><xsl:if test="$_titles = $_current_titles"><xsl:value-of select="position()"/></xsl:if></xsl:for-each></xsl:for-each></xsl:template><xsl:template name="bk:print_navi"><xsl:if test="string-length($bk:toc_url) &gt; 0"><nav class="navi"><xsl:call-template name="bk:_print_navi_prev"/><xsl:call-template name="bk:_print_navi_toc"/><xsl:call-template name="bk:_print_navi_next"/></nav></xsl:if></xsl:template><xsl:template name="bk:_print_navi_prev"><span class="navi-page navi-prev"><xsl:choose><xsl:when test="string-length($bk:prev_page_url) = 0"><a class="disabled"><xsl:value-of select="$bk:label_navi_prev"/></a></xsl:when><xsl:otherwise><a href="{$bk:prev_page_url}"><xsl:value-of select="$bk:label_navi_prev"/></a></xsl:otherwise></xsl:choose></span></xsl:template><xsl:template name="bk:_print_navi_next"><span class="navi-page navi-next"><xsl:choose><xsl:when test="string-length($bk:next_page_url) = 0"><a class="disabled"><xsl:value-of select="$bk:label_navi_next"/></a></xsl:when><xsl:otherwise><a href="{$bk:next_page_url}"><xsl:value-of select="$bk:label_navi_next"/></a></xsl:otherwise></xsl:choose></span></xsl:template><xsl:template name="bk:_print_navi_toc"><span class="navi-page navi-toc"><a href="{$bk:toc_url}"><xsl:value-of select="$bk:label_navi_toc"/></a></span></xsl:template><!--**
   Prints a bar in text.
 --><xsl:template match="bar"><span class="bar">───</span></xsl:template><!--**
   Prints a sequence of dots in text.
 --><xsl:template match="dots"><span class="dots">･･････</span></xsl:template><!--**
  The topmost element of xslbook document.
  `book` element is the legitimate element.
 --><xsl:template match="/book"><xsl:variable name="_data_url"><xsl:call-template name="bk:get_data_url"/></xsl:variable><html><head><meta charset="utf-8"/><meta name="viewport" content="width=device-width, initial-scale=1.0"/><meta http-equiv="X-UA-Compatible" content="ie=edge"/><title><xsl:apply-templates select="title"><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="allow">|title|for|if|choose|</xsl:with-param><xsl:with-param name="allow_text_node"/></xsl:apply-templates></title><xsl:call-template name="bk:_load_default_script"/><xsl:apply-templates select="script"/><xsl:call-template name="bk:_load_default_css"/><xsl:apply-templates select="css"/></head><body><main><header><xsl:call-template name="bk:print_navi"/></header><article class="book"><xsl:apply-templates select="title|for|if|choose"><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="allow">|title|for|if|choose|</xsl:with-param><xsl:with-param name="allow_text_node"/><xsl:with-param name="arg0">h1</xsl:with-param></xsl:apply-templates><xsl:apply-templates select="toc"><xsl:with-param name="data_url" select="$_data_url"/></xsl:apply-templates><xsl:apply-templates select="body|for|if|choose"><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="allow">|body|for|if|choose|</xsl:with-param><xsl:with-param name="allow_text_node"/></xsl:apply-templates><xsl:apply-templates select="toc"><xsl:with-param name="data_url" select="$_data_url"/></xsl:apply-templates><xsl:apply-templates select="preface|chapter|appendix|postface"><xsl:with-param name="data_url" select="$_data_url"/></xsl:apply-templates></article><footer><xsl:call-template name="bk:print_navi"/></footer></main></body></html></xsl:template><xsl:template name="bk:_load_default_script"><script src="{concat($bk:xsl_dir, '/xslbook.js')}"/></xsl:template><xsl:template name="bk:_load_default_css"><link rel="stylesheet" href="{concat($bk:xsl_dir, '/xslbook.css')}"/></xsl:template><!--**
  The element to print a title of page, chapter, section, etc.
  `arg0` is used for a element's tag name which encloses a title text if it is needed.
 --><xsl:template match="title"><!--** An URL of external data file. --><xsl:param name="data_url"/><!--** A generated-id of a base node. --><xsl:param name="data_gid"/><!--** Elements which are allowed to be applied. --><xsl:param name="allow"/><!--** Any argument 0. In this element, `arg0` is used as a tag name which surrounds this title. --><xsl:param name="arg0"/><!--** Any argument 1. --><xsl:param name="arg1"/><!--** Any argument 2. --><xsl:param name="arg2"/><xsl:variable name="_chapter_type" select="$arg1"/><xsl:variable name="_chapter_index" select="$arg2"/><xsl:variable name="_data_url"><xsl:call-template name="bk:get_data_url"><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></xsl:variable><xsl:variable name="_data_gid"><xsl:call-template name="bk:get_data_gid"><xsl:with-param name="data_gid" select="$data_gid"/></xsl:call-template></xsl:variable><xsl:choose><xsl:when test="string-length($arg0) = 0"><xsl:apply-templates><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/><xsl:with-param name="arg0"/><xsl:with-param name="arg1" select="$arg1"/><xsl:with-param name="arg2" select="$arg2"/></xsl:apply-templates></xsl:when><xsl:when test="$arg0 = 'h1'"><h1 class="title"><xsl:apply-templates><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/><xsl:with-param name="arg0"/><xsl:with-param name="arg1" select="$arg1"/><xsl:with-param name="arg2" select="$arg2"/></xsl:apply-templates></h1></xsl:when><xsl:otherwise><xsl:element name="{$arg0}"><xsl:attribute name="class">title</xsl:attribute><span class="index index-in-{$_chapter_type}"><xsl:value-of select="$_chapter_index"/></span><span class="label"><xsl:apply-templates><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/><xsl:with-param name="arg0"/><xsl:with-param name="arg1" select="$arg1"/><xsl:with-param name="arg2" select="$arg2"/></xsl:apply-templates></span></xsl:element></xsl:otherwise></xsl:choose></xsl:template><!--**
  The element to print contents of page, chapter, section, etc.
 --><xsl:template match="body"><!--** An URL of external data file. --><xsl:param name="data_url"/><!--** A generated-id of a base node. --><xsl:param name="data_gid"/><!--** Elements which are allowed to be applied. --><xsl:param name="allow"/><!--** A flag if text node if allowed. --><xsl:param name="allow_text_node"/><!--** Any argument 0. --><xsl:param name="arg0"/><!--** Any argument 1. --><xsl:param name="arg1"/><!--** Any argument 2. --><xsl:param name="arg2"/><xsl:variable name="_data_url"><xsl:call-template name="bk:get_data_url"><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></xsl:variable><xsl:variable name="_data_gid"><xsl:call-template name="bk:get_data_gid"><xsl:with-param name="data_gid" select="$data_gid"/></xsl:call-template></xsl:variable><div class="body"><xsl:apply-templates><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/><xsl:with-param name="allow" select="$allow"/><xsl:with-param name="allow_text_node" select="$allow_text_node"/><xsl:with-param name="arg0" select="$arg0"/><xsl:with-param name="arg1" select="$arg1"/><xsl:with-param name="arg2" select="$arg2"/></xsl:apply-templates></div></xsl:template><!--**
   Load JavaScript files.
 --><xsl:template match="/book/script"><xsl:choose><xsl:when test="boolean(@href)"><script src="{@href}"/></xsl:when><xsl:when test="boolean(@rpath)"><script src="{concat($bk:xsl_dir, '/', @rpath)}"/></xsl:when></xsl:choose></xsl:template><!--**
   Load CSS files.
 --><xsl:template match="/book/css"><xsl:choose><xsl:when test="boolean(@href)"><link rel="stylesheet" href="{@href}"/></xsl:when><xsl:when test="boolean(@rpath)"><link rel="stylesheet" href="{concat($bk:xsl_dir, '/', @rpath)}"/></xsl:when></xsl:choose></xsl:template><!--**
   Set an unique ID to an element.
 --><xsl:template name="bk:set_id"><xsl:attribute name="id"><xsl:call-template name="bk:get_id"/></xsl:attribute></xsl:template><!--**
   Get a value of the attribute 'id' if it is specified, or create an unique ID otherwise.
 --><xsl:template name="bk:get_id"><xsl:choose><xsl:when test="string-length(@id) != 0"><xsl:value-of select="@id"/></xsl:when><xsl:otherwise><xsl:text>idxbk</xsl:text><xsl:variable name="_tagname" select="local-name()"/><xsl:value-of select="$_tagname"/><xsl:number level="any" format="1" count="*[name() = $_tagname]"/></xsl:otherwise></xsl:choose></xsl:template><xsl:template match="preface|chapter|appendix|postface"><!--** An URL of external data file. --><xsl:param name="data_url"/><!--** A flag if text node is allowed. --><xsl:param name="allow_text_node" select="$ut:true"/><!--** Elements which are denied to be applied. --><xsl:param name="deny">|attr|</xsl:param><!--** Any argument 0. --><xsl:param name="arg0"/><!--** Any argument 1. --><xsl:param name="arg1"/><!--** Any argument 2. --><xsl:param name="arg2"/><xsl:variable name="_data_url"><xsl:call-template name="bk:get_data_url"><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></xsl:variable><xsl:variable name="_chapter_type" select="name()"/><xsl:variable name="_chapter_index"><xsl:call-template name="bk:_get_chapter_index"><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="chapter_type" select="$_chapter_type"/></xsl:call-template></xsl:variable><section class="{$_chapter_type}"><xsl:call-template name="bk:set_id"/><xsl:apply-templates select="title|for|if|choose"><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="allow">|title|for|if|choose|</xsl:with-param><xsl:with-param name="allow_text_node"/><xsl:with-param name="arg0">h2</xsl:with-param><xsl:with-param name="arg1" select="$_chapter_type"/><xsl:with-param name="arg2" select="$_chapter_index"/></xsl:apply-templates><xsl:apply-templates select="body|toc|section"><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="arg0"/><xsl:with-param name="arg1" select="$_chapter_type"/><xsl:with-param name="arg2" select="$_chapter_index"/></xsl:apply-templates></section></xsl:template><xsl:template name="bk:_get_chapter_index"><xsl:param name="data_url"/><xsl:param name="chapter_type"/><xsl:param name="page_index" select="$bk:page_index"/><xsl:choose><xsl:when test="$chapter_type = 'preface'"><xsl:if test="string-length($bk:preface_index_format) &gt; 0"><xsl:call-template name="bk:_format_chapter_index"><xsl:with-param name="index_format" select="$bk:preface_index_format"/><xsl:with-param name="index_in_page"><xsl:number level="multiple" format="1" count="preface"/></xsl:with-param><xsl:with-param name="count_until_prev_page"><xsl:call-template name="bk:_count_until_prev_page"><xsl:with-param name="chapter_type" select="$chapter_type"/><xsl:with-param name="page_index" select="$page_index"/></xsl:call-template></xsl:with-param></xsl:call-template></xsl:if></xsl:when><xsl:when test="$chapter_type = 'postface'"><xsl:if test="string-length($bk:postface_index_format) &gt; 0"><xsl:call-template name="bk:_format_chapter_index"><xsl:with-param name="index_format" select="$bk:postface_index_format"/><xsl:with-param name="index_in_page"><xsl:number level="multiple" format="1" count="postface"/></xsl:with-param><xsl:with-param name="count_until_prev_page"><xsl:call-template name="bk:_count_until_prev_page"><xsl:with-param name="chapter_type" select="$chapter_type"/><xsl:with-param name="page_index" select="$page_index"/></xsl:call-template></xsl:with-param></xsl:call-template></xsl:if></xsl:when><xsl:when test="$chapter_type = 'appendix'"><xsl:if test="string-length($bk:appendix_index_format) &gt; 0"><xsl:call-template name="bk:_format_chapter_index"><xsl:with-param name="index_format" select="$bk:appendix_index_format"/><xsl:with-param name="index_in_page"><xsl:number level="multiple" format="1" count="appendix"/></xsl:with-param><xsl:with-param name="count_until_prev_page"><xsl:call-template name="bk:_count_until_prev_page"><xsl:with-param name="chapter_type" select="$chapter_type"/><xsl:with-param name="page_index" select="$page_index"/></xsl:call-template></xsl:with-param></xsl:call-template></xsl:if></xsl:when><xsl:otherwise><xsl:if test="string-length($bk:chapter_index_format) &gt; 0"><xsl:call-template name="bk:_format_chapter_index"><xsl:with-param name="index_format" select="$bk:chapter_index_format"/><xsl:with-param name="index_in_page"><xsl:number level="multiple" format="1" count="chapter"/></xsl:with-param><xsl:with-param name="count_until_prev_page"><xsl:call-template name="bk:_count_until_prev_page"><xsl:with-param name="chapter_type" select="$chapter_type"/><xsl:with-param name="page_index" select="$page_index"/></xsl:call-template></xsl:with-param></xsl:call-template></xsl:if></xsl:otherwise></xsl:choose></xsl:template><xsl:template name="bk:_format_chapter_index"><xsl:param name="index_format"/><xsl:param name="index_in_page"/><xsl:param name="count_until_prev_page">0</xsl:param><xsl:variable name="_n" select="$count_until_prev_page + $index_in_page"/><xsl:number format="{$index_format}" value="$_n"/></xsl:template><xsl:template name="bk:_count_until_prev_page"><xsl:param name="chapter_type"/><xsl:param name="page_index" select="$bk:page_index"/><xsl:choose><xsl:when test="string-length($bk:toc_url) &gt; 0"><xsl:for-each select="document($bk:toc_url, /)/book/toc[1]"><xsl:value-of select="count(document((.//page)[position() &lt; $page_index]/@href, /)/book/*[name() = $chapter_type])"/></xsl:for-each></xsl:when><xsl:otherwise>0</xsl:otherwise></xsl:choose></xsl:template><xsl:template match="section"><!--** An URL of external data file. --><xsl:param name="data_url"/><!--** A flag if text node is allowed. --><xsl:param name="allow_text_node" select="$ut:true"/><!--** Elements which are denied to be applied. --><xsl:param name="deny">|attr|</xsl:param><!--** Any argument 0. --><xsl:param name="arg0"/><!--** Any argument 1. --><xsl:param name="arg1"/><!--** Any argument 2. --><xsl:param name="arg2"/><xsl:variable name="_data_url"><xsl:call-template name="bk:get_data_url"><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></xsl:variable><xsl:variable name="_chapter_type" select="$arg1"/><xsl:variable name="_chapter_index"><xsl:if test="string-length($arg2) != 0"><xsl:value-of select="$arg2"/><xsl:number level="single" count="section" format="{$bk:section_index_format}"/></xsl:if></xsl:variable><section class="section"><xsl:call-template name="bk:set_id"/><xsl:apply-templates select="title|for|if|choose"><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="allow">|title|for|if|choose|</xsl:with-param><xsl:with-param name="allow_text_node"/><xsl:with-param name="arg0">h3</xsl:with-param><xsl:with-param name="arg1" select="$_chapter_type"/><xsl:with-param name="arg2" select="$_chapter_index"/></xsl:apply-templates><xsl:apply-templates select="body|toc|section"><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="arg0"/><xsl:with-param name="arg1" select="$_chapter_type"/><xsl:with-param name="arg2" select="$_chapter_index"/></xsl:apply-templates></section></xsl:template><!--**
   Count elements at the specified path.
   The path is represented with `of` attributes.
   The prefix and suffix can be specified with `prefix` and `suffix` attributes.
 --><xsl:template match="count"><!--** An URL of external data file. --><xsl:param name="data_url"/><!--** An generated ID of a base node. --><xsl:param name="data_gid"/><xsl:variable name="_data_url"><xsl:call-template name="bk:get_data_url"><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></xsl:variable><xsl:variable name="_data_gid"><xsl:call-template name="bk:get_data_gid"><xsl:with-param name="data_gid" select="$data_gid"/></xsl:call-template></xsl:variable><xsl:variable name="_path"><xsl:call-template name="bk:get_attribute"><xsl:with-param name="name">of</xsl:with-param><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/></xsl:call-template></xsl:variable><xsl:variable name="_prefix"><xsl:call-template name="bk:get_attribute"><xsl:with-param name="name">prefix</xsl:with-param><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/></xsl:call-template></xsl:variable><xsl:variable name="_suffix"><xsl:call-template name="bk:get_attribute"><xsl:with-param name="name">suffix</xsl:with-param><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/></xsl:call-template></xsl:variable><xsl:call-template name="do:count_nodes_by_path"><xsl:with-param name="path" select="$_path"/><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/><xsl:with-param name="prefix" select="$_prefix"/><xsl:with-param name="suffix" select="$_suffix"/></xsl:call-template></xsl:template><!--**
   Get an URL of a data source by `data-src` attribute or a parameter from an ancestor element.
 --><xsl:template name="bk:get_data_url"><!--** An URL of external data file from an ancestor element. --><xsl:param name="data_url"/><xsl:choose><xsl:when test="boolean(@data-src)"><xsl:value-of select="@data-src"/></xsl:when><xsl:otherwise><xsl:value-of select="$data_url"/></xsl:otherwise></xsl:choose></xsl:template><!--**
   Get a generated ID of an element in an data source file.
   If `data-src` attribute is presented, this returns an empty string.
 --><xsl:template name="bk:get_data_gid"><!--** A generated ID of a base node from an ancestor element. --><xsl:param name="data_gid"/><xsl:if test="not(boolean(@data-src))"><xsl:value-of select="$data_gid"/></xsl:if></xsl:template><!--**
   An element to evaluate a condition and its child template is processed if the condition is true. If the condition is false and there is a child `else` element, the child template of the `else` element is processed.
 --><xsl:template match="if"><!--** An URL of external data file. --><xsl:param name="data_url"/><!--** A generated ID of a base node. --><xsl:param name="data_gid"/><!--** Elements which are allowed to be applied. --><xsl:param name="allow"/><!--** A flag if test node is allowed. --><xsl:param name="allow_text_node"/><!--** Any argument 0. --><xsl:param name="arg0"/><!--** Any argument 1. --><xsl:param name="arg1"/><!--** Any argument 2. --><xsl:param name="arg2"/><xsl:variable name="_data_url"><xsl:call-template name="bk:get_data_url"><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></xsl:variable><xsl:variable name="_data_gid"><xsl:call-template name="bk:get_data_gid"><xsl:with-param name="data_gid" select="$data_gid"/></xsl:call-template></xsl:variable><xsl:variable name="_path"><xsl:call-template name="bk:get_attribute"><xsl:with-param name="name">of</xsl:with-param><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/></xsl:call-template></xsl:variable><xsl:variable name="_is_matched"><xsl:choose><xsl:when test="string-length($_path) != 0"><xsl:variable name="_content"><xsl:call-template name="do:first_object_by_path"><xsl:with-param name="path" select="$_path"/><xsl:with-param name="what">content</xsl:with-param><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/></xsl:call-template></xsl:variable><xsl:call-template name="bk:_match_condition_by_operators"><xsl:with-param name="value" select="$_content"/><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gir" select="$_data_gid"/></xsl:call-template></xsl:when><xsl:otherwise><xsl:variable name="_test"><xsl:call-template name="bk:get_attribute"><xsl:with-param name="name">test</xsl:with-param><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/></xsl:call-template></xsl:variable><xsl:call-template name="do:match_condition_by_path"><xsl:with-param name="condition" select="$_test"/><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/></xsl:call-template></xsl:otherwise></xsl:choose></xsl:variable><xsl:choose><xsl:when test="$_is_matched = $ut:true"><xsl:call-template name="do:for_times"><xsl:with-param name="times" select="1"/><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/><xsl:with-param name="allow" select="$allow"/><xsl:with-param name="allow_text_node" select="$allow_text_node"/><xsl:with-param name="deny">|attr|else|</xsl:with-param><xsl:with-param name="arg0" select="$arg0"/><xsl:with-param name="arg1" select="$arg1"/><xsl:with-param name="arg2" select="$arg2"/></xsl:call-template></xsl:when><xsl:otherwise><xsl:for-each select="else"><xsl:call-template name="do:for_times"><xsl:with-param name="times" select="1"/><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/><xsl:with-param name="allow" select="$allow"/><xsl:with-param name="allow_text_node" select="$allow_text_node"/><xsl:with-param name="deny">|attr|else|</xsl:with-param><xsl:with-param name="arg0" select="$arg0"/><xsl:with-param name="arg1" select="$arg1"/><xsl:with-param name="arg2" select="$arg2"/></xsl:call-template></xsl:for-each></xsl:otherwise></xsl:choose></xsl:template><xsl:template name="bk:_match_condition_by_operators"><xsl:param name="value"/><xsl:param name="data_url"/><xsl:param name="data_gid"/><xsl:variable name="_eq"><xsl:call-template name="bk:get_attribute"><xsl:with-param name="name">eq</xsl:with-param><xsl:with-param name="data_url" select="$data_url"/><xsl:with-param name="data_gid" select="$data_gid"/></xsl:call-template></xsl:variable><xsl:variable name="_ne"><xsl:call-template name="bk:get_attribute"><xsl:with-param name="name">ne</xsl:with-param><xsl:with-param name="data_url" select="$data_url"/><xsl:with-param name="data_gid" select="$data_gid"/></xsl:call-template></xsl:variable><xsl:variable name="_le"><xsl:call-template name="bk:get_attribute"><xsl:with-param name="name">le</xsl:with-param><xsl:with-param name="data_url" select="$data_url"/><xsl:with-param name="data_gid" select="$data_gid"/></xsl:call-template></xsl:variable><xsl:variable name="_lt"><xsl:call-template name="bk:get_attribute"><xsl:with-param name="name">lt</xsl:with-param><xsl:with-param name="data_url" select="$data_url"/><xsl:with-param name="data_gid" select="$data_gid"/></xsl:call-template></xsl:variable><xsl:variable name="_ge"><xsl:call-template name="bk:get_attribute"><xsl:with-param name="name">ge</xsl:with-param><xsl:with-param name="data_url" select="$data_url"/><xsl:with-param name="data_gid" select="$data_gid"/></xsl:call-template></xsl:variable><xsl:variable name="_gt"><xsl:call-template name="bk:get_attribute"><xsl:with-param name="name">gt</xsl:with-param><xsl:with-param name="data_url" select="$data_url"/><xsl:with-param name="data_gid" select="$data_gid"/></xsl:call-template></xsl:variable><xsl:variable name="_is_not_matched"><xsl:if test="string-length($_eq) != 0 and not($value = $_eq)">1</xsl:if><xsl:if test="string-length($_ne) != 0 and not($value != $_ne)">1</xsl:if><xsl:if test="string-length($_le) != 0 and not($value &lt;= $_le)">1</xsl:if><xsl:if test="string-length($_lt) != 0 and not($value &lt; $_lt)">1</xsl:if><xsl:if test="string-length($_ge) != 0 and not($value &gt;= $_ge)">1</xsl:if><xsl:if test="string-length($_gt) != 0 and not($value &gt; $_gt)">1</xsl:if></xsl:variable><xsl:if test="string-length($_is_not_matched) = 0"><xsl:value-of select="$ut:true"/></xsl:if></xsl:template><!--**
   Gets an attribute value if it exists, 
 --><xsl:template name="bk:get_attribute"><!--** An attribute name. --><xsl:param name="name"/><!--** An URL of external data file. --><xsl:param name="data_url"/><!--** A generated ID of a base node. --><xsl:param name="data_gid"/><!--** Any argument 0. --><xsl:param name="arg0"/><!--** Any argument 1. --><xsl:param name="arg1"/><!--** Any argument 2. --><xsl:param name="arg2"/><xsl:variable name="_data_url"><xsl:call-template name="bk:get_data_url"><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></xsl:variable><xsl:variable name="_data_gid"><xsl:call-template name="bk:get_data_gid"><xsl:with-param name="data_gid" select="$data_gid"/></xsl:call-template></xsl:variable><xsl:choose><xsl:when test="@*[name()=$name]"><xsl:value-of select="@*[name()=$name]"/></xsl:when><xsl:when test="boolean(attr[@name=$name])"><xsl:apply-templates select="attr[@name=$name]"><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/><xsl:with-param name="arg0" select="$arg0"/><xsl:with-param name="arg1" select="$arg1"/><xsl:with-param name="arg2" select="$arg2"/></xsl:apply-templates></xsl:when></xsl:choose></xsl:template><!--**
   Get a local-name of an element at the specified path which contains values of descendant elements.
   The path is specified with `of` attribute.
   The prefix and suffix can be specified with `prefix` and `suffix` attributes.
 --><xsl:template match="name"><!--** An URL of external data file. --><xsl:param name="data_url"/><!--** A generated ID of a base node. --><xsl:param name="data_gid"/><xsl:variable name="_data_url"><xsl:call-template name="bk:get_data_url"><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></xsl:variable><xsl:variable name="_data_gid"><xsl:call-template name="bk:get_data_gid"><xsl:with-param name="data_gid" select="$data_gid"/></xsl:call-template></xsl:variable><xsl:variable name="_path"><xsl:call-template name="bk:get_attribute"><xsl:with-param name="name">of</xsl:with-param><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/></xsl:call-template></xsl:variable><xsl:variable name="_prefix"><xsl:call-template name="bk:get_attribute"><xsl:with-param name="name">prefix</xsl:with-param><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/></xsl:call-template></xsl:variable><xsl:variable name="_suffix"><xsl:call-template name="bk:get_attribute"><xsl:with-param name="name">suffix</xsl:with-param><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/></xsl:call-template></xsl:variable><xsl:call-template name="do:first_object_by_path"><xsl:with-param name="path" select="$_path"/><xsl:with-param name="what">name</xsl:with-param><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/><xsl:with-param name="prefix" select="$_prefix"/><xsl:with-param name="suffix" select="$_suffix"/></xsl:call-template></xsl:template><!--**
   Get a number value of an element at the specified path which contains values of descendant elements.
   The path is specified with `of` attribute.
   The prefix and suffix can be specified with `prefix` and `suffix` attributes.
 --><xsl:template match="number"><!--** An URL of external data file. --><xsl:param name="data_url"/><!--** A generated ID of a base node. --><xsl:param name="data_gid"/><xsl:variable name="_data_url"><xsl:call-template name="bk:get_data_url"><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></xsl:variable><xsl:variable name="_data_gid"><xsl:call-template name="bk:get_data_gid"><xsl:with-param name="data_gid" select="$data_gid"/></xsl:call-template></xsl:variable><xsl:variable name="_path"><xsl:call-template name="bk:get_attribute"><xsl:with-param name="name">of</xsl:with-param><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/></xsl:call-template></xsl:variable><xsl:variable name="_prefix"><xsl:call-template name="bk:get_attribute"><xsl:with-param name="name">prefix</xsl:with-param><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/></xsl:call-template></xsl:variable><xsl:variable name="_suffix"><xsl:call-template name="bk:get_attribute"><xsl:with-param name="name">suffix</xsl:with-param><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/></xsl:call-template></xsl:variable><xsl:call-template name="do:first_object_by_path"><xsl:with-param name="path" select="$_path"/><xsl:with-param name="what">number</xsl:with-param><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/><xsl:with-param name="prefix" select="$_prefix"/><xsl:with-param name="suffix" select="$_suffix"/></xsl:call-template></xsl:template><!--**
   Loops for each node at a specified path or specified times.
   The path is specfied with `each` attribute.
   The times is specified with `times` attribute.
 --><xsl:template match="for"><!--** An URL of external data file. --><xsl:param name="data_url"/><!--** A generated ID of a base node. --><xsl:param name="data_gid"/><!--** Elements which are allowed to be applied. --><xsl:param name="allow"/><!--** A flag if test node is allowed. --><xsl:param name="allow_text_node"/><!--** Elements which are denied to be applied. --><xsl:param name="deny"/><!--** Any argument 0. --><xsl:param name="arg0"/><!--** Any argument 1. --><xsl:param name="arg1"/><!--** Any argument 2. --><xsl:param name="arg2"/><xsl:variable name="_data_url"><xsl:call-template name="bk:get_data_url"><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></xsl:variable><xsl:variable name="_data_gid"><xsl:call-template name="bk:get_data_gid"><xsl:with-param name="data_gid" select="$data_gid"/></xsl:call-template></xsl:variable><xsl:variable name="_path"><xsl:call-template name="bk:get_attribute"><xsl:with-param name="name">each</xsl:with-param><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/></xsl:call-template></xsl:variable><xsl:variable name="_times"><xsl:call-template name="bk:get_attribute"><xsl:with-param name="name">times</xsl:with-param><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/></xsl:call-template></xsl:variable><xsl:choose><xsl:when test="string-length($_times) != 0"><xsl:call-template name="do:for_times"><xsl:with-param name="times" select="$_times"/><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/><xsl:with-param name="allow" select="$allow"/><xsl:with-param name="allow_text_node" select="$allow_text_node"/><xsl:with-param name="deny" select="'|attr|'"/><xsl:with-param name="arg0" select="$arg0"/><xsl:with-param name="arg1" select="$arg1"/><xsl:with-param name="arg2" select="$arg2"/></xsl:call-template></xsl:when><xsl:otherwise><xsl:call-template name="do:for_by_path"><xsl:with-param name="path" select="$_path"/><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/><xsl:with-param name="allow" select="$allow"/><xsl:with-param name="allow_text_node" select="$allow_text_node"/><xsl:with-param name="deny" select="'|attr|'"/><xsl:with-param name="arg0" select="$arg0"/><xsl:with-param name="arg1" select="$arg1"/><xsl:with-param name="arg2" select="$arg2"/></xsl:call-template></xsl:otherwise></xsl:choose></xsl:template><!--**
   An element to choice among multiple conditions which are expressed by `when` and `otherwise` elements.
 --><xsl:template match="choose"><!--** An URL of external data file. --><xsl:param name="data_url"/><!--** A generate ID of a base node. --><xsl:param name="data_gid"/><!--** Elements which are allowed to be applied. --><xsl:param name="allow"/><!--** A flag if test node is allowed. --><xsl:param name="allow_text_node"/><!--** Any argument 0. --><xsl:param name="arg0"/><!--** Any argument 1. --><xsl:param name="arg1"/><!--** Any argument 2. --><xsl:param name="arg2"/><xsl:variable name="_data_url"><xsl:call-template name="bk:get_data_url"><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></xsl:variable><xsl:variable name="_data_gid"><xsl:call-template name="bk:get_data_gid"><xsl:with-param name="data_gid" select="$data_gid"/></xsl:call-template></xsl:variable><xsl:variable name="_path"><xsl:call-template name="bk:get_attribute"><xsl:with-param name="name">of</xsl:with-param><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/></xsl:call-template></xsl:variable><xsl:variable name="_when_count" select="count(when)"/><xsl:choose><xsl:when test="string-length($_path) != 0"><xsl:variable name="_content"><xsl:call-template name="do:first_object_by_path"><xsl:with-param name="path" select="$_path"/><xsl:with-param name="what">content</xsl:with-param><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/></xsl:call-template></xsl:variable><xsl:call-template name="bk:_match_condition_in_when_by_operators_rcr"><xsl:with-param name="value" select="$_content"/><xsl:with-param name="when_index">1</xsl:with-param><xsl:with-param name="when_count" select="$_when_count"/><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/><xsl:with-param name="allow" select="$allow"/><xsl:with-param name="allow_text_node" select="$allow_text_node"/><xsl:with-param name="deny">|attr|</xsl:with-param><xsl:with-param name="arg0" select="$arg0"/><xsl:with-param name="arg1" select="$arg1"/><xsl:with-param name="arg2" select="$arg2"/></xsl:call-template></xsl:when><xsl:otherwise><xsl:call-template name="bk:_match_condition_in_when_by_test_rcr"><xsl:with-param name="when_index">1</xsl:with-param><xsl:with-param name="when_count" select="$_when_count"/><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/><xsl:with-param name="allow" select="$allow"/><xsl:with-param name="allow_text_node" select="$allow_text_node"/><xsl:with-param name="deny">|attr|</xsl:with-param><xsl:with-param name="arg0" select="$arg0"/><xsl:with-param name="arg1" select="$arg1"/><xsl:with-param name="arg2" select="$arg2"/></xsl:call-template></xsl:otherwise></xsl:choose></xsl:template><xsl:template name="bk:_match_condition_in_when_by_operators_rcr"><xsl:param name="value"/><xsl:param name="when_index"/><xsl:param name="when_count"/><xsl:param name="data_url"/><xsl:param name="data_gid"/><xsl:param name="allow"/><xsl:param name="allow_text_node"/><xsl:param name="deny"/><xsl:param name="arg0"/><xsl:param name="arg1"/><xsl:param name="arg2"/><xsl:choose><xsl:when test="$when_index &lt;= $when_count"><xsl:for-each select="when[position() = $when_index]"><xsl:variable name="_data_url"><xsl:call-template name="bk:get_data_url"><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></xsl:variable><xsl:variable name="_data_gid"><xsl:call-template name="bk:get_data_gid"><xsl:with-param name="data_gid" select="$data_gid"/></xsl:call-template></xsl:variable><xsl:variable name="_is_matched"><xsl:call-template name="bk:_match_condition_by_operators"><xsl:with-param name="value" select="$value"/><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/></xsl:call-template></xsl:variable><xsl:choose><xsl:when test="$_is_matched = $ut:true"><xsl:call-template name="do:for_times"><xsl:with-param name="times" select="1"/><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/><xsl:with-param name="allow" select="$allow"/><xsl:with-param name="allow_text_node" select="$allow_text_node"/><xsl:with-param name="deny">|attr|</xsl:with-param><xsl:with-param name="arg0" select="$arg0"/><xsl:with-param name="arg1" select="$arg1"/><xsl:with-param name="arg2" select="$arg2"/></xsl:call-template></xsl:when><xsl:otherwise><xsl:for-each select=".."><xsl:call-template name="bk:_match_condition_in_when_by_operators_rcr"><xsl:with-param name="value" select="$value"/><xsl:with-param name="when_index" select="$when_index + 1"/><xsl:with-param name="when_count" select="$when_count"/><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/><xsl:with-param name="allow" select="$allow"/><xsl:with-param name="allow_text_node" select="$allow_text_node"/><xsl:with-param name="deny">|attr|</xsl:with-param><xsl:with-param name="arg0" select="$arg0"/><xsl:with-param name="arg1" select="$arg1"/><xsl:with-param name="arg2" select="$arg2"/></xsl:call-template></xsl:for-each></xsl:otherwise></xsl:choose></xsl:for-each></xsl:when><xsl:otherwise><xsl:for-each select="otherwise"><xsl:variable name="_data_url"><xsl:call-template name="bk:get_data_url"><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></xsl:variable><xsl:variable name="_data_gid"><xsl:call-template name="bk:get_data_gid"><xsl:with-param name="data_gid" select="$data_gid"/></xsl:call-template></xsl:variable><xsl:call-template name="do:for_times"><xsl:with-param name="times" select="1"/><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/><xsl:with-param name="allow" select="$allow"/><xsl:with-param name="allow_text_node" select="$allow_text_node"/><xsl:with-param name="deny">|attr|</xsl:with-param><xsl:with-param name="arg0" select="$arg0"/><xsl:with-param name="arg1" select="$arg1"/><xsl:with-param name="arg2" select="$arg2"/></xsl:call-template></xsl:for-each></xsl:otherwise></xsl:choose></xsl:template><xsl:template name="bk:_match_condition_in_when_by_test_rcr"><xsl:param name="when_index"/><xsl:param name="when_count"/><xsl:param name="data_url"/><xsl:param name="data_gid"/><xsl:param name="allow"/><xsl:param name="allow_text_node"/><xsl:param name="deny"/><xsl:param name="arg0"/><xsl:param name="arg1"/><xsl:param name="arg2"/><xsl:choose><xsl:when test="$when_index &lt;= $when_count"><xsl:for-each select="when[position() = $when_index]"><xsl:variable name="_data_url"><xsl:call-template name="bk:get_data_url"><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></xsl:variable><xsl:variable name="_data_gid"><xsl:call-template name="bk:get_data_gid"><xsl:with-param name="data_gid" select="$data_gid"/></xsl:call-template></xsl:variable><xsl:variable name="_is_matched"><xsl:variable name="_test"><xsl:call-template name="bk:get_attribute"><xsl:with-param name="name">test</xsl:with-param><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/></xsl:call-template></xsl:variable><xsl:call-template name="do:match_condition_by_path"><xsl:with-param name="condition" select="$_test"/><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/></xsl:call-template></xsl:variable><xsl:choose><xsl:when test="$_is_matched = $ut:true"><xsl:call-template name="do:for_times"><xsl:with-param name="times" select="1"/><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/><xsl:with-param name="allow" select="$allow"/><xsl:with-param name="allow_text_node" select="$allow_text_node"/><xsl:with-param name="deny">|attr|</xsl:with-param><xsl:with-param name="arg0" select="$arg0"/><xsl:with-param name="arg1" select="$arg1"/><xsl:with-param name="arg2" select="$arg2"/></xsl:call-template></xsl:when><xsl:otherwise><xsl:for-each select=".."><xsl:call-template name="bk:_match_condition_in_when_by_test_rcr"><xsl:with-param name="when_index" select="$when_index + 1"/><xsl:with-param name="when_count" select="$when_count"/><xsl:with-param name="data_url" select="$data_url"/><xsl:with-param name="data_gid" select="$data_gid"/><xsl:with-param name="allow" select="$allow"/><xsl:with-param name="allow_text_node" select="$allow_text_node"/><xsl:with-param name="deny">|attr|</xsl:with-param><xsl:with-param name="arg0" select="$arg0"/><xsl:with-param name="arg1" select="$arg1"/><xsl:with-param name="arg2" select="$arg2"/></xsl:call-template></xsl:for-each></xsl:otherwise></xsl:choose></xsl:for-each></xsl:when><xsl:otherwise><xsl:for-each select="otherwise"><xsl:variable name="_data_url"><xsl:call-template name="bk:get_data_url"><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></xsl:variable><xsl:variable name="_data_gid"><xsl:call-template name="bk:get_data_gid"><xsl:with-param name="data_gid" select="$data_gid"/></xsl:call-template></xsl:variable><xsl:call-template name="do:for_times"><xsl:with-param name="times" select="1"/><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/><xsl:with-param name="allow" select="$allow"/><xsl:with-param name="allow_text_node" select="$allow_text_node"/><xsl:with-param name="deny">|attr|</xsl:with-param><xsl:with-param name="arg0" select="$arg0"/><xsl:with-param name="arg1" select="$arg1"/><xsl:with-param name="arg2" select="$arg2"/></xsl:call-template></xsl:for-each></xsl:otherwise></xsl:choose></xsl:template><!--**
   Get a content of an element at the specified path which contains values of descendant elements.
   The path is specified with `of` attribute.
   The prefix and suffix can be specified with `prefix` and `suffix` attributes.
 --><xsl:template match="content"><!--** An URL of external data file. --><xsl:param name="data_url"/><!--** A generated ID of a base node. --><xsl:param name="data_gid"/><xsl:variable name="_data_url"><xsl:call-template name="bk:get_data_url"><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></xsl:variable><xsl:variable name="_data_gid"><xsl:call-template name="bk:get_data_gid"><xsl:with-param name="data_gid" select="$data_gid"/></xsl:call-template></xsl:variable><xsl:variable name="_path"><xsl:call-template name="bk:get_attribute"><xsl:with-param name="name">of</xsl:with-param><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/></xsl:call-template></xsl:variable><xsl:variable name="_prefix"><xsl:call-template name="bk:get_attribute"><xsl:with-param name="name">prefix</xsl:with-param><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/></xsl:call-template></xsl:variable><xsl:variable name="_suffix"><xsl:call-template name="bk:get_attribute"><xsl:with-param name="name">suffix</xsl:with-param><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/></xsl:call-template></xsl:variable><xsl:call-template name="do:first_object_by_path"><xsl:with-param name="path" select="$_path"/><xsl:with-param name="what">content</xsl:with-param><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/><xsl:with-param name="prefix" select="$_prefix"/><xsl:with-param name="suffix" select="$_suffix"/></xsl:call-template></xsl:template><!--**
   Get a value of an element at the specified path which contains values of descendant elements.
   The path is specified with `of` attribute.
   The prefix and suffix can be specified with `prefix` and `suffix` attributes.
 --><xsl:template match="value"><!--** An URL of external data file. --><xsl:param name="data_url"/><!--** A generated ID of a base node. --><xsl:param name="data_gid"/><xsl:variable name="_data_url"><xsl:call-template name="bk:get_data_url"><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></xsl:variable><xsl:variable name="_data_gid"><xsl:call-template name="bk:get_data_gid"><xsl:with-param name="data_gid" select="$data_gid"/></xsl:call-template></xsl:variable><xsl:variable name="_path"><xsl:call-template name="bk:get_attribute"><xsl:with-param name="name">of</xsl:with-param><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/></xsl:call-template></xsl:variable><xsl:variable name="_prefix"><xsl:call-template name="bk:get_attribute"><xsl:with-param name="name">prefix</xsl:with-param><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/></xsl:call-template></xsl:variable><xsl:variable name="_suffix"><xsl:call-template name="bk:get_attribute"><xsl:with-param name="name">suffix</xsl:with-param><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/></xsl:call-template></xsl:variable><xsl:call-template name="do:first_object_by_path"><xsl:with-param name="path" select="$_path"/><xsl:with-param name="what">text</xsl:with-param><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/><xsl:with-param name="prefix" select="$_prefix"/><xsl:with-param name="suffix" select="$_suffix"/></xsl:call-template></xsl:template></xsl:stylesheet>