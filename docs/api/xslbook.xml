<?xml version="1.0" encoding="UTF-8"?><?xml-stylesheet type="application/xml" href="xsldoc/xsldoc.xsl"?><!-- xslbook.xsl v0.1. Copyright (C) xslet@github. MIT License --><!--** xslbook.xsl ver0.1 - API Document

** Copyright (C) xslet@github
** MIT License
--><xsl:stylesheet xmlns:ut="https://github.com/xslet/2020/xslutil" xmlns:do="https://github.com/xslet/2020/xsldo" xmlns:bk="https://github.com/xslet/2020/xslbook" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0"><!--** The URL of the XSL file. --><xsl:param name="bk:xsl_url"><xsl:call-template name="ut:get_xsl_url"/></xsl:param><!--** The directory URL of the XSL file. --><xsl:param name="bk:xsl_dir"><xsl:call-template name="ut:get_dir_from_url"><xsl:with-param name="url" select="$bk:xsl_url"/></xsl:call-template></xsl:param><!--**
   The topmost element of xslbook document.
 --><xsl:template match="/book|/xslbook"><html><head><meta charset="utf-8"/><meta name="viewport" content="width=device-width, initial-scale=1.0"/><meta http-equiv="X-UA-Compatible" content="ie=edge"/><title><xsl:apply-templates select="title"/></title><xsl:call-template name="bk:_load_default_script"/><xsl:call-template name="bk:_load_default_css"/></head><body><main><header/><article class="book"><h1><xsl:apply-templates select="title"/></h1><div class="body"><xsl:apply-templates select="body"/></div></article><footer/></main></body></html></xsl:template><xsl:template name="bk:_load_default_script"><script src="{concat($bk:xsl_dir, '/xslbook.js')}"/></xsl:template><xsl:template name="bk:_load_default_css"><xsl:if test="not(boolean(css))"><link rel="stylesheet" href="{concat($bk:xsl_dir, '/xslbook.css')}"/></xsl:if></xsl:template><!--**
   Get a content of an element at the specified path which contains values of descendant elements.
   The path is specified with `of` attribute.
   The prefix and suffix can be specified with `prefix` and `suffix` attributes.
 --><xsl:template match="content"><!--** An URL of external data file. --><xsl:param name="data_url"/><!--** A generate-id of a base node. --><xsl:param name="data_gid"/><xsl:variable name="_data_url"><xsl:call-template name="bk:get_data_url"><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></xsl:variable><xsl:variable name="_data_gid"><xsl:call-template name="bk:get_data_gid"><xsl:with-param name="data_gid" select="$data_gid"/></xsl:call-template></xsl:variable><xsl:call-template name="do:first_object_by_path"><xsl:with-param name="path" select="@of"/><xsl:with-param name="what">content</xsl:with-param><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/><xsl:with-param name="prefix" select="@prefix"/><xsl:with-param name="suffix" select="@suffix"/></xsl:call-template></xsl:template><!--**
   Count elements at the specified path.
   The path is represented with `of` attributes.
   The prefix and suffix can be specified with `prefix` and `suffix` attributes.
 --><xsl:template match="count"><!--** An URL of external data file. --><xsl:param name="data_url"/><!--** An generate-id of a base node. --><xsl:param name="data_gid"/><xsl:variable name="_data_url"><xsl:call-template name="bk:get_data_url"><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></xsl:variable><xsl:variable name="_data_gid"><xsl:call-template name="bk:get_data_gid"><xsl:with-param name="data_gid" select="$data_gid"/></xsl:call-template></xsl:variable><xsl:call-template name="do:count_nodes_by_path"><xsl:with-param name="path" select="@of"/><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/><xsl:with-param name="prefix" select="@prefix"/><xsl:with-param name="suffix" select="@suffix"/></xsl:call-template></xsl:template><!--**
   Get an URL of a data source by `data-src` attribute or a parameter from an ancestor element.
 --><xsl:template name="bk:get_data_url"><!--** An URL of external data file from an ancestor element. --><xsl:param name="data_url"/><xsl:choose><xsl:when test="boolean(@data-src)"><xsl:value-of select="@data-src"/></xsl:when><xsl:otherwise><xsl:value-of select="$data_url"/></xsl:otherwise></xsl:choose></xsl:template><!--**
   Get a generated ID of an element in an data source file.
   If `data-src` attribute is presented, this returns an empty string.
 --><xsl:template name="bk:get_data_gid"><!--** A generate-id of a base node from an ancestor element. --><xsl:param name="data_gid"/><xsl:if test="not(boolean(@data-src))"><xsl:value-of select="$data_gid"/></xsl:if></xsl:template><!--**
   Get a local-name of an element at the specified path which contains values of descendant elements.
   The path is specified with `of` attribute.
   The prefix and suffix can be specified with `prefix` and `suffix` attributes.
 --><xsl:template match="name"><!--** An URL of external data file. --><xsl:param name="data_url"/><!--** A generate-id of a base node. --><xsl:param name="data_gid"/><xsl:variable name="_data_url"><xsl:call-template name="bk:get_data_url"><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></xsl:variable><xsl:variable name="_data_gid"><xsl:call-template name="bk:get_data_gid"><xsl:with-param name="data_gid" select="$data_gid"/></xsl:call-template></xsl:variable><xsl:call-template name="do:first_object_by_path"><xsl:with-param name="path" select="@of"/><xsl:with-param name="what">name</xsl:with-param><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/><xsl:with-param name="prefix" select="@prefix"/><xsl:with-param name="suffix" select="@suffix"/></xsl:call-template></xsl:template><!--**
   Get a number value of an element at the specified path which contains values of descendant elements.
   The path is specified with `of` attribute.
   The prefix and suffix can be specified with `prefix` and `suffix` attributes.
 --><xsl:template match="number"><!--** An URL of external data file. --><xsl:param name="data_url"/><!--** A generate-id of a base node. --><xsl:param name="data_gid"/><xsl:variable name="_data_url"><xsl:call-template name="bk:get_data_url"><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></xsl:variable><xsl:variable name="_data_gid"><xsl:call-template name="bk:get_data_gid"><xsl:with-param name="data_gid" select="$data_gid"/></xsl:call-template></xsl:variable><xsl:call-template name="do:first_object_by_path"><xsl:with-param name="path" select="@of"/><xsl:with-param name="what">number</xsl:with-param><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/><xsl:with-param name="prefix" select="@prefix"/><xsl:with-param name="suffix" select="@suffix"/></xsl:call-template></xsl:template><!--**
   Get a value of an element at the specified path which contains values of descendant elements.
   The path is specified with `of` attribute.
   The prefix and suffix can be specified with `prefix` and `suffix` attributes.
 --><xsl:template match="value"><!--** An URL of external data file. --><xsl:param name="data_url"/><!--** A generate-id of a base node. --><xsl:param name="data_gid"/><xsl:variable name="_data_url"><xsl:call-template name="bk:get_data_url"><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></xsl:variable><xsl:variable name="_data_gid"><xsl:call-template name="bk:get_data_gid"><xsl:with-param name="data_gid" select="$data_gid"/></xsl:call-template></xsl:variable><xsl:call-template name="do:first_object_by_path"><xsl:with-param name="path" select="@of"/><xsl:with-param name="what">text</xsl:with-param><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/><xsl:with-param name="prefix" select="@prefix"/><xsl:with-param name="suffix" select="@suffix"/></xsl:call-template></xsl:template></xsl:stylesheet>