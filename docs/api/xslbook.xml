<?xml version="1.0" encoding="UTF-8"?><?xml-stylesheet type="application/xml" href="xsldoc/xsldoc.xsl"?><!-- xslbook.xsl v0.1. Copyright (C) xslet@github. MIT License --><!--** xslbook.xsl ver0.1 - API Document

** Copyright (C) xslet@github
** MIT License
--><xsl:stylesheet xmlns:ut="https://github.com/xslet/2020/xslutil" xmlns:do="https://github.com/xslet/2020/xsldo" xmlns:bk="https://github.com/xslet/2020/xslbook" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0"><!--** The URL of the XSL file. --><xsl:param name="bk:xsl_url"><xsl:call-template name="ut:get_xsl_url"/></xsl:param><!--** The directory URL of the XSL file. --><xsl:param name="bk:xsl_dir"><xsl:call-template name="ut:get_dir_from_url"><xsl:with-param name="url" select="$bk:xsl_url"/></xsl:call-template></xsl:param><!--**
 --><xsl:template match="p|br|hr|b|i|code|sup|sub|q"><!--** An URL of external data file. --><xsl:param name="data_url"/><!--** A generate-id of a base node. --><xsl:param name="data_gid"/><xsl:param name="allow_text_node" select="$ut:true"/><xsl:param name="arg0"/><xsl:param name="arg1"/><xsl:param name="arg2"/><xsl:variable name="_data_url"><xsl:call-template name="bk:get_data_url"><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></xsl:variable><xsl:variable name="_data_gid"><xsl:call-template name="bk:get_data_gid"><xsl:with-param name="data_gid" select="$data_gid"/></xsl:call-template></xsl:variable><xsl:element name="{name()}"><xsl:for-each select="attribute::*"><xsl:attribute name="{name()}"><xsl:value-of select="."/></xsl:attribute></xsl:for-each><xsl:apply-templates><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/></xsl:apply-templates></xsl:element></xsl:template><xsl:template match="u"><!--** An URL of external data file. --><xsl:param name="data_url"/><!--** A generate-id of a base node. --><xsl:param name="data_gid"/><xsl:param name="arg0"/><xsl:param name="arg1"/><xsl:param name="arg2"/><xsl:variable name="_data_url"><xsl:call-template name="bk:get_data_url"><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></xsl:variable><xsl:variable name="_data_gid"><xsl:call-template name="bk:get_data_gid"><xsl:with-param name="data_gid" select="$data_gid"/></xsl:call-template></xsl:variable><span style="text-decoration:underline;"><xsl:for-each select="attribute::*"><xsl:attribute name="{name()}"><xsl:value-of select="."/></xsl:attribute></xsl:for-each><xsl:apply-templates><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/></xsl:apply-templates></span></xsl:template><xsl:template match="s"><!--** An URL of external data file. --><xsl:param name="data_url"/><!--** A generate-id of a base node. --><xsl:param name="data_gid"/><xsl:param name="arg0"/><xsl:param name="arg1"/><xsl:param name="arg2"/><xsl:variable name="_data_url"><xsl:call-template name="bk:get_data_url"><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></xsl:variable><xsl:variable name="_data_gid"><xsl:call-template name="bk:get_data_gid"><xsl:with-param name="data_gid" select="$data_gid"/></xsl:call-template></xsl:variable><span style="text-decoration:line-through;"><xsl:for-each select="attribute::*"><xsl:attribute name="{name()}"><xsl:value-of select="."/></xsl:attribute></xsl:for-each><xsl:apply-templates><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/></xsl:apply-templates></span></xsl:template><!--**
   The topmost element of xslbook document.
 --><xsl:template match="/book|/xslbook"><xsl:variable name="_data_url"><xsl:call-template name="bk:get_data_url"/></xsl:variable><html><head><meta charset="utf-8"/><meta name="viewport" content="width=device-width, initial-scale=1.0"/><meta http-equiv="X-UA-Compatible" content="ie=edge"/><title><xsl:apply-templates select="title"><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="allow">|title|fo|if|case|</xsl:with-param></xsl:apply-templates></title><xsl:call-template name="bk:_load_default_script"/><xsl:call-template name="bk:_load_default_css"/></head><body><main><header/><article class="book"><xsl:apply-templates select="title|for|if|case"><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="allow">|title|for|if|case|</xsl:with-param><xsl:with-param name="arg0">h1</xsl:with-param></xsl:apply-templates><div class="body"><xsl:apply-templates select="body"><xsl:with-param name="allow_text_node" select="$ut:true"/></xsl:apply-templates></div></article><footer/></main></body></html></xsl:template><xsl:template name="bk:_load_default_script"><script src="{concat($bk:xsl_dir, '/xslbook.js')}"/></xsl:template><xsl:template name="bk:_load_default_css"><xsl:if test="not(boolean(css))"><link rel="stylesheet" href="{concat($bk:xsl_dir, '/xslbook.css')}"/></xsl:if></xsl:template><xsl:template match="title"><xsl:param name="data_url"/><xsl:param name="data_gid"/><xsl:param name="arg0"/><!-- Tag Name --><xsl:param name="arg1"/><xsl:param name="arg2"/><xsl:variable name="_data_url"><xsl:call-template name="bk:get_data_url"><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></xsl:variable><xsl:variable name="_data_gid"><xsl:call-template name="bk:get_data_gid"><xsl:with-param name="data_gid" select="$data_gid"/></xsl:call-template></xsl:variable><xsl:choose><xsl:when test="string-length($arg0) != 0"><xsl:element name="{$arg0}"><xsl:apply-templates><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/><xsl:with-param name="arg0" select="''"/><xsl:with-param name="arg1" select="$arg1"/><xsl:with-param name="arg2" select="$arg2"/></xsl:apply-templates></xsl:element></xsl:when><xsl:otherwise><xsl:apply-templates><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/><xsl:with-param name="arg0" select="''"/><xsl:with-param name="arg1" select="$arg1"/><xsl:with-param name="arg2" select="$arg2"/></xsl:apply-templates></xsl:otherwise></xsl:choose></xsl:template><xsl:template match="body"><xsl:param name="data_url"/><xsl:param name="data_gid"/><xsl:param name="allow"/><xsl:param name="allow_text_node"/><xsl:param name="arg0"/><xsl:param name="arg1"/><xsl:param name="arg2"/><xsl:variable name="_data_url"><xsl:call-template name="bk:get_data_url"><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></xsl:variable><xsl:variable name="_data_gid"><xsl:call-template name="bk:get_data_gid"><xsl:with-param name="data_gid" select="$data_gid"/></xsl:call-template></xsl:variable><xsl:apply-templates><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/><xsl:with-param name="allow" select="$allow"/><xsl:with-param name="allow_text_node" select="$allow_text_node"/><xsl:with-param name="arg0" select="$arg0"/><xsl:with-param name="arg1" select="$arg1"/><xsl:with-param name="arg2" select="$arg2"/></xsl:apply-templates></xsl:template><!--**
   Loops for each node at a specified path.
   The path is specfied with `each` attribute.
 --><xsl:template match="for"><!--** An URL of external data file. --><xsl:param name="data_url"/><!--** A generate-id of a base node. --><xsl:param name="data_gid"/><!--** Elements which are allowed to be applied. --><xsl:param name="allow"/><!--** A flag if test node is allowed. --><xsl:param name="allow_text_node"/><!--** Any argument 0. --><xsl:param name="arg0"/><!--** Any argument 1. --><xsl:param name="arg1"/><!--** Any argument 2. --><xsl:param name="arg2"/><xsl:variable name="_data_url"><xsl:call-template name="bk:get_data_url"><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></xsl:variable><xsl:variable name="_data_gid"><xsl:call-template name="bk:get_data_gid"><xsl:with-param name="data_gid" select="$data_gid"/></xsl:call-template></xsl:variable><xsl:call-template name="do:for_by_path"><xsl:with-param name="path" select="@each"/><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/><xsl:with-param name="allow" select="$allow"/><xsl:with-param name="allow_text_node" select="$allow_text_node"/><xsl:with-param name="arg0" select="$arg0"/><xsl:with-param name="arg1" select="$arg1"/><xsl:with-param name="arg2" select="$arg2"/></xsl:call-template></xsl:template><!--**
   Count elements at the specified path.
   The path is represented with `of` attributes.
   The prefix and suffix can be specified with `prefix` and `suffix` attributes.
 --><xsl:template match="count"><!--** An URL of external data file. --><xsl:param name="data_url"/><!--** An generate-id of a base node. --><xsl:param name="data_gid"/><xsl:variable name="_data_url"><xsl:call-template name="bk:get_data_url"><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></xsl:variable><xsl:variable name="_data_gid"><xsl:call-template name="bk:get_data_gid"><xsl:with-param name="data_gid" select="$data_gid"/></xsl:call-template></xsl:variable><xsl:call-template name="do:count_nodes_by_path"><xsl:with-param name="path" select="@of"/><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/><xsl:with-param name="prefix" select="@prefix"/><xsl:with-param name="suffix" select="@suffix"/></xsl:call-template></xsl:template><!--**
   Get a local-name of an element at the specified path which contains values of descendant elements.
   The path is specified with `of` attribute.
   The prefix and suffix can be specified with `prefix` and `suffix` attributes.
 --><xsl:template match="name"><!--** An URL of external data file. --><xsl:param name="data_url"/><!--** A generate-id of a base node. --><xsl:param name="data_gid"/><xsl:variable name="_data_url"><xsl:call-template name="bk:get_data_url"><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></xsl:variable><xsl:variable name="_data_gid"><xsl:call-template name="bk:get_data_gid"><xsl:with-param name="data_gid" select="$data_gid"/></xsl:call-template></xsl:variable><xsl:call-template name="do:first_object_by_path"><xsl:with-param name="path" select="@of"/><xsl:with-param name="what">name</xsl:with-param><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/><xsl:with-param name="prefix" select="@prefix"/><xsl:with-param name="suffix" select="@suffix"/></xsl:call-template></xsl:template><!--**
   Get a number value of an element at the specified path which contains values of descendant elements.
   The path is specified with `of` attribute.
   The prefix and suffix can be specified with `prefix` and `suffix` attributes.
 --><xsl:template match="number"><!--** An URL of external data file. --><xsl:param name="data_url"/><!--** A generate-id of a base node. --><xsl:param name="data_gid"/><xsl:variable name="_data_url"><xsl:call-template name="bk:get_data_url"><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></xsl:variable><xsl:variable name="_data_gid"><xsl:call-template name="bk:get_data_gid"><xsl:with-param name="data_gid" select="$data_gid"/></xsl:call-template></xsl:variable><xsl:call-template name="do:first_object_by_path"><xsl:with-param name="path" select="@of"/><xsl:with-param name="what">number</xsl:with-param><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/><xsl:with-param name="prefix" select="@prefix"/><xsl:with-param name="suffix" select="@suffix"/></xsl:call-template></xsl:template><!--**
   Get an URL of a data source by `data-src` attribute or a parameter from an ancestor element.
 --><xsl:template name="bk:get_data_url"><!--** An URL of external data file from an ancestor element. --><xsl:param name="data_url"/><xsl:choose><xsl:when test="boolean(@data-src)"><xsl:value-of select="@data-src"/></xsl:when><xsl:otherwise><xsl:value-of select="$data_url"/></xsl:otherwise></xsl:choose></xsl:template><!--**
   Get a generated ID of an element in an data source file.
   If `data-src` attribute is presented, this returns an empty string.
 --><xsl:template name="bk:get_data_gid"><!--** A generate-id of a base node from an ancestor element. --><xsl:param name="data_gid"/><xsl:if test="not(boolean(@data-src))"><xsl:value-of select="$data_gid"/></xsl:if></xsl:template><!--**
   Get a content of an element at the specified path which contains values of descendant elements.
   The path is specified with `of` attribute.
   The prefix and suffix can be specified with `prefix` and `suffix` attributes.
 --><xsl:template match="content"><!--** An URL of external data file. --><xsl:param name="data_url"/><!--** A generate-id of a base node. --><xsl:param name="data_gid"/><xsl:variable name="_data_url"><xsl:call-template name="bk:get_data_url"><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></xsl:variable><xsl:variable name="_data_gid"><xsl:call-template name="bk:get_data_gid"><xsl:with-param name="data_gid" select="$data_gid"/></xsl:call-template></xsl:variable><xsl:call-template name="do:first_object_by_path"><xsl:with-param name="path" select="@of"/><xsl:with-param name="what">content</xsl:with-param><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/><xsl:with-param name="prefix" select="@prefix"/><xsl:with-param name="suffix" select="@suffix"/></xsl:call-template></xsl:template><!--**
   Get a value of an element at the specified path which contains values of descendant elements.
   The path is specified with `of` attribute.
   The prefix and suffix can be specified with `prefix` and `suffix` attributes.
 --><xsl:template match="value"><!--** An URL of external data file. --><xsl:param name="data_url"/><!--** A generate-id of a base node. --><xsl:param name="data_gid"/><xsl:variable name="_data_url"><xsl:call-template name="bk:get_data_url"><xsl:with-param name="data_url" select="$data_url"/></xsl:call-template></xsl:variable><xsl:variable name="_data_gid"><xsl:call-template name="bk:get_data_gid"><xsl:with-param name="data_gid" select="$data_gid"/></xsl:call-template></xsl:variable><xsl:call-template name="do:first_object_by_path"><xsl:with-param name="path" select="@of"/><xsl:with-param name="what">text</xsl:with-param><xsl:with-param name="data_url" select="$_data_url"/><xsl:with-param name="data_gid" select="$_data_gid"/><xsl:with-param name="prefix" select="@prefix"/><xsl:with-param name="suffix" select="@suffix"/></xsl:call-template></xsl:template></xsl:stylesheet>